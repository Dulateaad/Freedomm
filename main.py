import telebot
import os
from dotenv import load_dotenv
from apscheduler.schedulers.background import BackgroundScheduler
import pytz
import time
from collections import defaultdict
import csv
import threading

load_dotenv()

TOKEN = os.getenv("BOT_TOKEN")
ADMIN_CHAT_ID = int(os.getenv("ADMIN_CHAT_ID"))
INSTRUCTION_LINK = os.getenv("INSTRUCTION_LINK")
DOWNLOAD_LINK = "https://freedombank.onelink.me/WNLd/h8jtco42"

bot = telebot.TeleBot(TOKEN)
user_ids_file = "user_ids.txt"
referrals_file = "referrals.txt"
contacts_file = "contacts.txt"
bloggers_file = "bloggers.txt"
broadcast_state = {}

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
def load_user_ids():
    try:
        with open(user_ids_file, "r") as f:
            return set(int(line.strip()) for line in f if line.strip())
    except FileNotFoundError:
        return set()

def save_user_ids():
    with open(user_ids_file, "w") as f:
        for uid in user_ids:
            f.write(f"{uid}\n")

def load_bloggers():
    try:
        with open(bloggers_file, "r") as f:
            return set(line.strip().lower() for line in f if line.strip())
    except FileNotFoundError:
        return set()

def save_blogger(username):
    with open(bloggers_file, "a") as f:
        f.write(f"{username.lower()}\n")

user_ids = load_user_ids()
bloggers = load_bloggers()

# –ö–Ω–æ–ø–∫–∏
def get_main_menu(username, cid):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    if username and username.lower() in bloggers:
        markup.row("üìà –ú–æ–∏ —Å—Ç–∞—Ä—Ç—ã")
    if cid == ADMIN_CHAT_ID:
        markup.row("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "üì• –í—ã–≥—Ä—É–∑–∫–∞ CSV")
        markup.row("‚úèÔ∏è –î–æ–±–∞–≤–∏—Ç—å –±–ª–æ–≥–µ—Ä–∞")
    return markup

# /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    cid = message.chat.id
    args = message.text.split()
    referrer = args[1] if len(args) > 1 else "unknown"
    username = message.from_user.username or "–±–µ–∑ –Ω–∏–∫–∞"

    with open(referrals_file, "a") as f:
        f.write(f"{cid},{referrer},{username}\n")

    if cid != ADMIN_CHAT_ID:
        user_ids.add(cid)
        save_user_ids()
        bot.send_message(
            ADMIN_CHAT_ID,
            f"üë§ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n\nüÜî Chat ID: {cid}\nüîó –†–µ—Ñ–µ—Ä–∞–ª: {referrer}\nüë§ Username: @{username}"
        )

    markup = get_main_menu(username, cid)

    # –ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.send_message(cid, 
        "–ü—Ä–∏–≤–µ—Ç! –ù–∞ —Å–≤—è–∑–∏ –∫–æ–º–∞–Ω–¥–∞ –ê–π–∂–∞–Ω –ó–∞–∫–∏—Ä–æ–≤–æ–π. –ù–∏–∂–µ –±—É–¥–µ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ë–∞–Ω–∫–∞ FREEDOM, "
        "–≤—ã–ø–æ–ª–Ω–∏–≤ –≤—Å–µ —É—Å–ª–æ–≤–∏—è –≤—ã —Å–º–æ–∂–µ—Ç–µ —Å—Ä–∞–∑—É –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—É –æ—Ç –ê–π–∂–∞–Ω, –∏ 1000 —Ç–µ–Ω–≥–µ –æ—Ç FREEDOM\n"
        "–ü–ª—é—Å –ø–æ–ª—É—á–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é ¬´—Ç—Ä–∏ –º–µ—Ç–æ–¥–∞ –∫–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ FREEDOM\n\n"
        f"{DOWNLOAD_LINK}"
    )

    # –í—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 60 —Å–µ–∫
    def send_second():
        bot.send_message(
            cid,
            "1. –°–∫–∞—á–∞–π—Ç–µ Freedom Superapp –ø–æ —Å—Å—ã–ª–∫–µüëá\n\n"
            f"{DOWNLOAD_LINK}\n\n"
            "2. –ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é (–≤–≤–µ–¥–∏—Ç–µ –ò–ò–ù –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞).\n\n"
            "3. –í –ø–æ–ª–µ ¬´–ü—Ä–æ–º–æ–∫–æ–¥¬ª –≤—ã–±–µ—Ä–∏—Ç–µ ZAKIROVA (–±–æ–ª—å—à–∏–º–∏ –±—É–∫–≤–∞–º–∏. –ü—Ä–æ–º–æ–∫–æ–¥ –º–æ–≥—É—Ç –∏ –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å)\n\n"
            "4. –î–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∫–∞—Ä—Ç—ã SuperCard –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –±–æ—Ç —Ñ–∏–æ –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —á—Ç–æ–± –º—ã –≤–∞–º –∑–∞–∫–∏–Ω—É–ª–∏ –¥–µ–Ω–µ–≥ –Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—é. "
            "(–ò–ª–∏ —Å–∞–º–∏ –∑–∞–∫–∏–Ω—å—Ç–µ —Å–µ–±–µ –Ω–∞ –∫–∞—Ä—Ç—É 100 —Ç–µ–Ω–≥–µ)\n\n"
            "5. –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è 100 —Ç–µ–Ω–≥–µ –°–æ–≤–µ—Ä—à–∏—Ç–µ –ª—é–±—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º:\n"
            "‚Ä¢ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–æ–ø–µ—Ä–∞—Ü–∏–∏ - –ø–ª–∞—Ç–µ–∂–∏ - –º–æ–±–∏–ª—å–Ω–∞—è —Å–≤—è–∑—å)\n"
            "‚Ä¢ –ª–∏–±–æ —Å–æ–≤–µ—Ä—à–∏—Ç—å –ª—é–±—É—é –ø–æ–∫—É–ø–∫—É –≤ –º–∞–≥–∞–∑–∏–Ω–µ, –æ–ø–ª–∞—Ç–∏–≤ –µ–µ –∫–∞—Ä—Ç–æ–π SuperCard.\n\n"
            "6. –ü–æ–ª—É—á–∏—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –∫—ç—à–±–µ–∫ 1000 —Ç–µ–Ω–≥–µ üéâ\n\n"
            "7. –î–∞–ª–µ–µ –º–æ–∂–µ—Ç–µ –¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–µ–π —Å—Å—ã–ª–∫–æ–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –ø–æ 1000 —Ç–µ–Ω–≥–µ –∑–∞ –∫–∞–∂–¥–æ–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ ‚ù§Ô∏è\n\n"
            "8. –ù–∏–∂–µ –±—É–¥–µ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∫–∞–∫ –¥–∞–ª—å—à–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –§—Ä–∏–¥–æ–º –∫—Ä–æ–º–µ —Ä–∞—Å—Å—ã–ª–∫–∏ —Å—Å—ã–ª–æ–∫"
        )

    def ask_name():
        bot.send_message(cid, "üëã –ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.", reply_markup=markup)

    threading.Timer(60, send_second).start()
    threading.Timer(90, ask_name).start()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
@bot.message_handler(func=lambda msg: True)
def handle_message(message):
    cid = message.chat.id
    text = message.text.strip()
    username = (message.from_user.username or "–±–µ–∑ –Ω–∏–∫–∞").lower()

    if cid != ADMIN_CHAT_ID:
        user_ids.add(cid)
        save_user_ids()

    if text.startswith("+7") or any(char.isdigit() for char in text):
        with open(contacts_file, "a") as f:
            f.write(f"{cid},{text}\n")
        bot.send_message(cid, "‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç –ø–æ–ª—É—á–µ–Ω. –°–ø–∞—Å–∏–±–æ!")
        bot.send_message(ADMIN_CHAT_ID, f"üìû –ö–æ–Ω—Ç–∞–∫—Ç –æ—Ç @{username}:\n{text}")
        return

    if text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" and cid == ADMIN_CHAT_ID:
        stats = defaultdict(int)
        try:
            with open(referrals_file, "r") as f:
                for line in f:
                    parts = line.strip().split(",")
                    if len(parts) >= 2:
                        stats[parts[1]] += 1
        except FileNotFoundError:
            bot.send_message(cid, "üìÇ –§–∞–π–ª referrals.txt –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        if not stats:
            bot.send_message(cid, "‚ùó –ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.")
            return

        msg = "üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –±–ª–æ–≥–µ—Ä–∞–º:*\n\n"
        for ref, count in sorted(stats.items(), key=lambda x: -x[1]):
            msg += f"üîπ {ref} ‚Äî {count} —á–µ–ª.\n"
        bot.send_message(cid, msg, parse_mode="Markdown")
        return

    if text == "üìà –ú–æ–∏ —Å—Ç–∞—Ä—Ç—ã":
        starts = []
        try:
            with open(referrals_file, "r") as f:
                for line in f:
                    parts = line.strip().split(",")
                    if len(parts) >= 3 and parts[1].lower() == username:
                        starts.append(parts[2])
        except FileNotFoundError:
            bot.send_message(cid, "üìÇ –§–∞–π–ª referrals.txt –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        if not starts:
            bot.send_message(cid, "üòï –ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –ø—Ä–∏—à–µ–ª –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ.")
        else:
            msg = "üì• –õ—é–¥–∏, –ø—Ä–∏—à–µ–¥—à–∏–µ –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ:\n\n"
            for user in starts:
                msg += f"üîπ @{user}\n"
            bot.send_message(cid, msg)
        return

    if text == "üì• –í—ã–≥—Ä—É–∑–∫–∞ CSV" and cid == ADMIN_CHAT_ID:
        try:
            with open(contacts_file, "r") as infile, open("contacts.csv", "w", newline='') as outfile:
                writer = csv.writer(outfile)
                writer.writerow(["Chat ID", "–ö–æ–Ω—Ç–∞–∫—Ç"])
                for line in infile:
                    writer.writerow(line.strip().split(","))
            with open("contacts.csv", "rb") as doc:
                bot.send_document(cid, doc)
        except Exception as e:
            bot.send_message(cid, f"‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ: {e}")
        return

    if text == "‚úèÔ∏è –î–æ–±–∞–≤–∏—Ç—å –±–ª–æ–≥–µ—Ä–∞" and cid == ADMIN_CHAT_ID:
        bot.send_message(cid, "‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ username –±–ª–æ–≥–µ—Ä–∞ (–±–µ–∑ @):")
        broadcast_state[cid] = 'adding_blogger'
        return

    if broadcast_state.get(cid) == 'adding_blogger':
        save_blogger(text.lower())
        bloggers.add(text.lower())
        bot.send_message(cid, f"‚úÖ –ë–ª–æ–≥–µ—Ä @{text} –¥–æ–±–∞–≤–ª–µ–Ω.")
        broadcast_state.pop(cid, None)
        return

    bot.send_message(cid, "‚ùó –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ —Ñ–∞–º–∏–ª–∏—é.")

# –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫

def send_daily_reminders():
    for uid in user_ids:
        try:
            if uid != ADMIN_CHAT_ID:
                bot.send_message(uid,
                    f"‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –Ω–µ –∑–∞–±—É–¥—å—Ç–µ —Å–∫–∞—á–∞—Ç—å *Freedom SuperApp* –∏ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!\n\n–°—Å—ã–ª–∫–∞: {DOWNLOAD_LINK}",
                    parse_mode="Markdown"
                )
        except Exception as e:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å {uid}: {e}")

scheduler = BackgroundScheduler()
scheduler.add_job(
    send_daily_reminders,
    'cron',
    hour=11,
    minute=0,
    timezone=pytz.timezone('Asia/Almaty')
)
scheduler.start()

print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è...")

while True:
    try:
        bot.polling(none_stop=True)
    except Exception as e:
        print(f"‚ùó –û—à–∏–±–∫–∞ polling: {e}")
        time.sleep(10)
